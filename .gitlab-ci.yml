before_script:
  - dmenv install

stages:
  - build
  - check
  - deploy

.check:
  stage: check

check/linux:
  extends: .check
  tags: [linux]
  script:
    - dmenv run -- python run-ci.py --isolate-conan-user-home install-deps --use-tanker=same-as-branch --profile gcc8-release
    - dmenv run -- python run-ci.py build-and-test
  artifacts:
    paths:
      - core/cgo_linux_amd64.go
      - core/ctanker/linux-amd64/include
      - core/ctanker/linux-amd64/lib

check/macos:
  extends: .check
  tags: [macos]
  script:
    - dmenv run -- python run-ci.py --isolate-conan-user-home install-deps --use-tanker=same-as-branch --profile macos-release
    - dmenv run -- python run-ci.py build-and-test
  artifacts:
    paths:
      - core/cgo_darwin_amd64.go
      - core/ctanker/darwin-amd64/include
      - core/ctanker/darwin-amd64/lib

cross-build/windows:
  stage: build
  tags: [linux]
  script:
    - dmenv run -- python run-ci.py --isolate-conan-user-home install-deps --use-tanker=same-as-branch --profile mingw32-release
  artifacts:
    paths:
      - core/cgo_windows_386.go
      - core/ctanker/windows-386/include
      - core/ctanker/windows-386/lib
    expire_in: 1 hour

check/windows:
  extends: .check
  tags: [windows]
  script:
    - set GOARCH=386
    - set CGO_ENABLED=1
    - dmenv run -- python run-ci.py --isolate-conan-user-home build-and-test

.check-deployed:
  stage: check
  when: manual

check/deployed-linux:
  extends: .check-deployed
  tags: [linux]
  script:
    - dmenv run -- python run-ci.py --isolate-conan-user-home install-deps --use-tanker=deployed --profile gcc8-release
    - dmenv run -- python run-ci.py build-and-test

check/deployed-macos:
  extends: .check-deployed
  tags: [macos]
  script:
    - dmenv run -- python run-ci.py --isolate-conan-user-home install-deps --use-tanker=deployed --profile macos-release
    - dmenv run -- python run-ci.py build-and-test

check/deployed-windows:
  extends: .check-deployed
  tags: [windows]
  script:
    - dmenv run -- python run-ci.py --isolate-conan-user-home install-deps --use-tanker=deployed --profile mingw32-release
    - dmenv run -- python run-ci.py build-and-test


deploy:
 stage: deploy
 when: manual
 tags: [linux]
 script:
  - dmenv run -- python run-ci.py deploy --version $VERSION

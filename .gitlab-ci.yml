before_script:
  - poetry install

stages:
  - check
  - deploy

.check:
  stage: check
  when: manual

check/linux:
  extends: .check
  tags: [linux]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch --profile gcc8-release

check/macos:
  extends: .check
  tags: [macos]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch --profile macos-release

.check-deployed:
  stage: check
  when: manual

check/deployed-linux:
  extends: .check-deployed
  tags: [linux]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=deployed --profile gcc8-release
  artifacts:
    paths:
      - core/cgo_linux_amd64.go
      - core/ctanker/linux-amd64/include
      - core/ctanker/linux-amd64/lib

check/deployed-macos:
  extends: .check-deployed
  tags: [macos]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=deployed --profile macos-release
  artifacts:
    paths:
      - core/cgo_darwin_amd64.go
      - core/ctanker/darwin-amd64/include
      - core/ctanker/darwin-amd64/lib

.nightly:
  stage: check
  only:
    - schedules

nightly/linux:
  extends: .nightly
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch --profile gcc8-release
  tags:
    - linux

nightly/macos:
  extends: .nightly
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch --profile macos-release
  tags:
    - macos

mirror:
  tags:
    - linux
  stage: deploy
  only:
    - /\Av[0-9.]+\z/   # public release tags
    - master
    - /\Afeat\/.+\z/   # feat/ branches
  except:
    - schedules
  script:
    - poetry run python run-ci.py  mirror

deploy:
  stage: deploy
  when: manual
  only:
    - master
  tags: [linux]
  script:
    - poetry run python run-ci.py deploy --version $VERSION
